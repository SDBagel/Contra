@model Dictionary<ContraUser, List<string>>

@using Microsoft.AspNetCore.Identity
@using Contra.Areas.Identity.Data
@inject RoleManager<IdentityRole> RoleManager

@{
    ViewData["Title"] = "Users";
    Layout = "_AdminLayout";
}

<div class="section-title" id="compact-compatible" >
    <h2>@ViewData["Message"] (@Model.Keys.Count)</h2>
    <div class="filters">
        <div class="filter-group">
            <h5 class="hideable">View:</h5>
            <button id="comfortableButton" class="btn c-btn-info" onclick="showComfortable()">Comfortable</button>
            <button id="compactButton" class="btn c-btn-outline-info" onclick="showCompact()">Compact</button>
        </div>
        <div class="filter-group">
            <h5 class="hideable">Sort:</h5>
            <a class="btn @(ViewData["SortBy"].Equals("Activity")? "c-btn-info" : "c-btn-outline-info")" href="~/users/@ViewData["Filter"]/activity">Activity</a>
            <a class="btn @(ViewData["SortBy"].Equals("Date")? "c-btn-info" : "c-btn-outline-info")" href="~/users/@ViewData["Filter"]/date">Date</a>
            <a class="btn @(ViewData["SortBy"].Equals("Email")? "c-btn-info" : "c-btn-outline-info")" href="~/users/@ViewData["Filter"]/email">Email</a>
            <a class="btn @(ViewData["SortBy"].Equals("Name")? "c-btn-info" : "c-btn-outline-info")" href="~/users/@ViewData["Filter"]/name">Name</a>
        </div>
        <div class="filter-group search">
            <h5 class="hideable">Search:</h5>
            <form asp-action="Users">
                <input name="filter" type="text" placeholder="Search users" />
                <button class="btn c-btn-info" type="submit">Search</button>
            </form>
        </div>
    </div>
</div>
<br />
@foreach (ContraUser user in Model.Keys)
{
    <section>
        <div class="card card-big card-compact card-user">
            <div class="user-info">
                @{
                    var email = @user.Email.Split('@');
                    string provider = email[1];
                    string name = email[0].Substring(0, 3) + new string('*', email[0].Length - 3);
                }
                <h5>@user.Name - @(name + "@" + provider)</h5>
                <p>Id: @user.Id</p>
                <p>Verified Email: @user.EmailConfirmed</p>
                @foreach (IdentityRole role in RoleManager.Roles)
                {
                    <label for="@role.Name-@user.Id" class="toggle compact-hidden">@role.Name
                    <input type="checkbox" id="@role.Name-@user.Id" @(Model[user].Contains(role.Name)? "checked" : null) onclick="updateRoles(this, '@user.Id', '@role.Name')">
                    <span class="checkmark"></span></label>
                }
            </div>
            <div class="user-controls compact-hidden">
                <a class="nav-link" href="~/articles/@user.Id">📃 Articles</a>
                <a class="nav-link" href="~/comments/@user.Id">💬 Comments</a>
                <a class="nav-link" href="~/tickets/@user.Id">❔ Tickets</a>
                <div class="actions">
                    @if (user.IsBanned)
                    { <a class="nav-link text-danger clickable" onclick="confirmAction(this, 'api/v1/user/@user.Id/unban')">🙌 Unban</a> }
                    else
                    { <a class="nav-link text-danger clickable" onclick="confirmAction(this, 'api/v1/user/@user.Id/ban')">🤚 Ban</a> }
                    @if (!user.EmailConfirmed)
                    { <a class="nav-link text-danger clickable" onclick="confirmAction(this, 'api/v1/user/@user.Id/remove')">👋 Remove</a> }
                </div>
            </div>
        </div>
    </section>
}